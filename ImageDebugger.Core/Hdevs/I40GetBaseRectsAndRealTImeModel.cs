//
// File generated by HDevelop for HALCON/.NET (C#) Version 18.11.0.0
// Non-ASCII strings in this file are encoded in local-8-bit encoding (cp936).
// 
// Please note that non-ASCII characters in string constants are exported
// as octal codes in order to guarantee that the strings are correctly
// created on all systems, independent on any compiler settings.
// 
// Source files with different encoding should not be mixed in one project.
//
//  This file is intended to be used with the HDevelopTemplate or
//  HDevelopTemplateWPF projects located under %HALCONEXAMPLES%\c#

using System;
using HalconDotNet;

public partial class HDevelopExport
{

  // Procedures 
  // Local procedures 
  public void I40GetBaseRects (HObject ho_Modelright, HTuple hv_ModelID, out HTuple hv_rowVRect, 
      out HTuple hv_colVRect, out HTuple hv_angleVRect, out HTuple hv_len1VRect, out HTuple hv_len2VRect, 
      out HTuple hv_rowHRect, out HTuple hv_colHRect, out HTuple hv_angleHRect, out HTuple hv_len1HRect, 
      out HTuple hv_len2HRect)
  {




    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced;

    // Local control variables 

    HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
    HTuple hv_Angle = new HTuple(), hv_Score = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    hv_rowVRect = new HTuple();
    hv_colVRect = new HTuple();
    hv_angleVRect = new HTuple();
    hv_len1VRect = new HTuple();
    hv_len2VRect = new HTuple();
    hv_rowHRect = new HTuple();
    hv_colHRect = new HTuple();
    hv_angleHRect = new HTuple();
    hv_len1HRect = new HTuple();
    hv_len2HRect = new HTuple();
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle1(out ho_ROI_0, 56.831, 111.206, 465.524, 1574.75);

    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Modelright, ho_ROI_0, out ho_ImageReduced);

    hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
    HOperatorSet.FindShapeModel(ho_ImageReduced, hv_ModelID, -0.39, 0.79, 0.2, 1, 
        0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, out hv_Score);

    hv_rowVRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rowVRect = hv_Row+394;
    }
    hv_colVRect.Dispose();
    hv_colVRect = new HTuple(hv_Column);
    hv_angleVRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_angleVRect = (new HTuple(-90)).TupleRad()
        ;
    }
    hv_len1VRect.Dispose();
    hv_len1VRect = 20;
    hv_len2VRect.Dispose();
    hv_len2VRect = 380;


    hv_colHRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_colHRect = hv_Column-550;
    }
    hv_rowHRect.Dispose();
    hv_rowHRect = new HTuple(hv_Row);
    hv_angleHRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_angleHRect = (new HTuple(-180)).TupleRad()
        ;
    }
    hv_len1HRect.Dispose();
    hv_len1HRect = 20;
    hv_len2HRect.Dispose();
    hv_len2HRect = 80;
    ho_ROI_0.Dispose();
    ho_ImageReduced.Dispose();

    hv_Row.Dispose();
    hv_Column.Dispose();
    hv_Angle.Dispose();
    hv_Score.Dispose();

    return;
  }

  public void I40GetBaseRectsAndCreateNewModel (HObject ho_Modelright, HTuple hv_ModelID, 
      out HTuple hv_ModelID1, out HTuple hv_rowVRect, out HTuple hv_colVRect, out HTuple hv_angleVRect, 
      out HTuple hv_len1VRect, out HTuple hv_len2VRect, out HTuple hv_rowHRect, out HTuple hv_colHRect, 
      out HTuple hv_angleHRect, out HTuple hv_len1HRect, out HTuple hv_len2HRect, 
      out HTuple hv_RowNew, out HTuple hv_ColNew, out HTuple hv_RadianNew)
  {




    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_Rectangle;
    HObject ho_ROI_NewModelArea, ho_ImageReduced1;

    // Local control variables 

    HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
    HTuple hv_Angle = new HTuple(), hv_Score = new HTuple();
    HTuple hv_ScoreNew = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    HOperatorSet.GenEmptyObj(out ho_ROI_NewModelArea);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced1);
    hv_ModelID1 = new HTuple();
    hv_rowVRect = new HTuple();
    hv_colVRect = new HTuple();
    hv_angleVRect = new HTuple();
    hv_len1VRect = new HTuple();
    hv_len2VRect = new HTuple();
    hv_rowHRect = new HTuple();
    hv_colHRect = new HTuple();
    hv_angleHRect = new HTuple();
    hv_len1HRect = new HTuple();
    hv_len2HRect = new HTuple();
    hv_RowNew = new HTuple();
    hv_ColNew = new HTuple();
    hv_RadianNew = new HTuple();
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle1(out ho_ROI_0, 56.831, 111.206, 465.524, 1574.75);

    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Modelright, ho_ROI_0, out ho_ImageReduced);

    hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
    HOperatorSet.FindShapeModel(ho_ImageReduced, hv_ModelID, -0.39, 0.79, 0.2, 1, 
        0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, out hv_Score);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle.Dispose();
    HOperatorSet.GenRectangle1(out ho_Rectangle, hv_Row-50, hv_Column-500, hv_Row+50, 
        hv_Column+500);
    }
    //create real-time shape model
    ho_ROI_NewModelArea.Dispose();
    HOperatorSet.GenRectangle1(out ho_ROI_NewModelArea, 147.251, 517.11, 284.314, 
        1430.32);
    ho_ImageReduced1.Dispose();
    HOperatorSet.ReduceDomain(ho_Modelright, ho_ROI_NewModelArea, out ho_ImageReduced1
        );
    hv_ModelID1.Dispose();
    HOperatorSet.CreateShapeModel(ho_ImageReduced1, "auto", -0.39, 0.79, "auto", 
        "auto", "use_polarity", "auto", "auto", out hv_ModelID1);
    hv_RowNew.Dispose();hv_ColNew.Dispose();hv_RadianNew.Dispose();hv_ScoreNew.Dispose();
    HOperatorSet.FindShapeModel(ho_ImageReduced1, hv_ModelID1, -0.39, 0.79, 0.5, 
        1, 0.5, "least_squares", 0, 0.9, out hv_RowNew, out hv_ColNew, out hv_RadianNew, 
        out hv_ScoreNew);
    hv_rowVRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rowVRect = hv_Row+394;
    }
    hv_colVRect.Dispose();
    hv_colVRect = new HTuple(hv_Column);
    hv_angleVRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_angleVRect = (new HTuple(-90)).TupleRad()
        ;
    }
    hv_len1VRect.Dispose();
    hv_len1VRect = 20;
    hv_len2VRect.Dispose();
    hv_len2VRect = 380;


    hv_colHRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_colHRect = hv_Column-550;
    }
    hv_rowHRect.Dispose();
    hv_rowHRect = new HTuple(hv_Row);
    hv_angleHRect.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_angleHRect = (new HTuple(-180)).TupleRad()
        ;
    }
    hv_len1HRect.Dispose();
    hv_len1HRect = 20;
    hv_len2HRect.Dispose();
    hv_len2HRect = 80;
    ho_ROI_0.Dispose();
    ho_ImageReduced.Dispose();
    ho_Rectangle.Dispose();
    ho_ROI_NewModelArea.Dispose();
    ho_ImageReduced1.Dispose();

    hv_Row.Dispose();
    hv_Column.Dispose();
    hv_Angle.Dispose();
    hv_Score.Dispose();
    hv_ScoreNew.Dispose();

    return;
  }

  public void ToHeightImage (HObject ho_Image, out HObject ho_HeightImage)
  {



    // Local iconic variables 

    HObject ho_ImageScaled;
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_HeightImage);
    HOperatorSet.GenEmptyObj(out ho_ImageScaled);
    ho_ImageScaled.Dispose();
    HOperatorSet.ScaleImage(ho_Image, out ho_ImageScaled, 1, -32768);
    ho_HeightImage.Dispose();
    HOperatorSet.ScaleImage(ho_ImageScaled, out ho_HeightImage, 1.6, 0);
    ho_ImageScaled.Dispose();


    return;
  }


}

